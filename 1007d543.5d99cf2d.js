(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{70:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return m}));var n=a(3),i=a(7),l=(a(0),a(95)),r={id:"inject_template",title:"Inject Template (Experimental Feature)",sidebar_label:"Inject Template (Experimental Feature)"},c={unversionedId:"inject_template",id:"inject_template",isDocsHomePage:!1,title:"Inject Template (Experimental Feature)",description:"Inject Template (Experimental Feature)",source:"@site/docs\\inject_template.md",slug:"/inject_template",permalink:"/docs/inject_template",editUrl:"https://github.com/josunlp/Social-graphics-library/edit/master/docs/inject_template.md",version:"current",sidebar_label:"Inject Template (Experimental Feature)",sidebar:"someSidebar",previous:{title:"Calling multible generations",permalink:"/docs/multi_calls"}},p=[{value:"Inject Template (Experimental Feature)",id:"inject-template-experimental-feature",children:[]}],o={rightToc:p};function m(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"inject-template-experimental-feature"},"Inject Template (Experimental Feature)"),Object(l.b)("p",null,"As an alternative to forking the project, it is possible to inject your own templates locally. To do this, simply install the NPM package with ",Object(l.b)("inlineCode",{parentName:"p"},"npm i social-graphics-library"),", then after the initialization a template can be injected with the following method:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),'new SocialGraphicsLibrary.inject([\n  {\n    "callName": "template_name",\n    "template": new Template()\n  }\n')))}m.isMDXComponent=!0}}]);